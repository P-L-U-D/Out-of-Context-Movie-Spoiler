// import firebase from './firebaseApp';
// import GifDisplay from './GifDisplay.js'

// class UserSelection extends Component {
// constructor() {
//     super();

//     this.state = {
//     //holds array of input
//     submittedData: [],
//     //user's input from when they write down their gif
//     gifChoice: ""
//     }
// }
// // getting data from firebase 
// componentDidMount() {
//     const dbRef = firebase.database().ref('savedResults');
// // creating a variable and storing it  
//     dbRef.on('value', (snapshot) => {
//     const startState = snapshot.val();
//     const newState = [];
//     //start state is an object so we use for loop to access user's selection
//     for (let key in startState) {
//     const usersChoice = {
//     //key generated by firebase and post holds input 
//         id: key,
//         post: startState[key]
    
//         }
//     //pushing a new user's gif selection into our app
//         newState.push(usersChoice);
//     }
//     //updating our component state using newstate
//     this.setState({
//         submittedData: newState
//     })
//     })
// }

// //deals with the selected gifs
// userSelects = (event) => {
//     this.setState({
//         gifChoice: event.target.value
//     })
// }


// //User has added their gif to their stack and so they submit an object to firebase
// userAdded = (event) => {
//     event.preventDefault();
//     const dbRef = firebase.database().ref('savedResults');
//     dbRef.push(this.state.gifChoice);
//     this.setState({
//     gifChoice: ""
//     })
// }



// //function to remove a review
// removeSubmission = (gifRemoval) => {
//     const dbRef = firebase.database().ref('savedResults');
//     dbRef.child(gifRemoval).remove();
// }

// render () {
//     return (
//     <div className="userSavedSection">
//         <form action="submit">
//         <input onChange={this.userSelects} type="textarea" minLength="20" maxLength="300" value={this.state.gifChoice} placeholder="Write a review here!"/>
//         <button class="submitButton" onClick={this.userAdded}>Add</button>
//         </form>

//         { this.state.submittedData.map((gifstack) => {
//             return (
//             <div className="addedUserReview">
//                 <div key={gifstack.id}></div>
//                 <p>{gifstack.post}</p>
//                 <button class="delete" onClick={ () => this.removeSubmission(gifstack.id)}>Delete gif</button>
                
//             </div>
//             )
//         }) }
//     </div>
//     )
// }
// }

// export default UserSelection;